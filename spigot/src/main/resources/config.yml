# Config for CustomCrafting v${project.version}
# -
# PlaceholderAPI:
# Identifier: customcrafting
# Placeholders:
#   - %customcrafting_crafts%       > The total custom recipes the player has crafted
#   - %customcrafting_recipes_[option]%
#       - %customcrafting_recipes_vanilla%        > The total vanilla recipes that are loaded
#       - %customcrafting_recipes_custom%         > The total custom recipes that are loaded
#       - %customcrafting_recipes_available%      > The amount of custom recipes that the player has permission to use
#   - %customcrafting_recipe_[option]_[namespaced_key]%
#       - %customcrafting_recipe_type_[namespaced_key]%         > The type of the recipe
#       - %customcrafting_recipe_crafts_[namespaced_key]%       > How often the player has crafted the recipe
#       - %customcrafting_recipe_advanced_[namespaced_key]%     > If the recipe is an advanced crafting table recipe
#       - %customcrafting_recipe_permission_[namespaced_key]%   > If the recipe requires a permission
#       - %customcrafting_recipe_available_[namespaced_key]%    > If the recipe is available for the player

# Debug should be disabled! That are a lot of Messages!
debug: false

# The language you want use. The context: <language>_<country> Available languages' en_US, de_DE, zh_CN.
# If you want to edit a language copy it and rename it.
# After renaming you can just use your language file name instead, and it will also be available in the in-game settings.
# If you have any language file you would like to add to this plugin, then feel free to contact me.
language: en_US

gui:
  # Specifies if the background glass panes should be placed into the gui. If disabled things like crafting grids/slots won't be apparent anymore! Best in combination with custom gui textures!
  draw_background: true

creator:
  # Configure if the stored values and items you put or configured in the GUI should be cleared after saving a recipe.
  reset_after_save: true

commands:
  # Aliases for the main command of the plugin.
  # This is often used to prevent incompatibility with other plugins that use the same alias as ChatClear, etc.
  alias: [ "cc" ]

local_storage:
  # this should always be true if you don't use a database or want to export your data to the database.
  # If you use a database you can still load local data, but configure how it loads them with the following settings below.
  load: true
  # The settings for the backup, that is done before automatic and manual (/recipe save) recipe/item upgrades to the new config format
  backup:
    # Backup can be disabled, but that is not recommended
    enabled: true
    # Specify for how long a backup is kept
    # Whenever a new backup is created, old backups that or older than specified here are deleted
    keep_for:
      value: 60
      unit: DAYS

  # Specifies if the local storage should be loaded before or after the database.
  # This is useful if you have items/recipes that depend on items in the database or other way around.
  # Make sure that the dependencies of items and recipes are loaded in the correct order.
  before_database: true
  # Sets if already existing recipes/items with the same namespaced key should be replaced when registered.
  # Useful if you want to override a database recipe/item with the one from local storage.
  # Or when "before_database" enabled override local recipes/items with database data.
  # The recipes can only be replaced in Minecraft 1.15+, because the API pre 1.15 is unstable.
  override_data: false
database:
  # If the database feature should be used or not.
  enabled: false
  # The type of the database. Currently, only MYSQL
  type: MYSQL
  # The ip or hostname of the data bank
  host: "localhost"
  # The port of the data bank
  port: 3306
  # The name of the schema
  schema: "mc_plugins"
  # The username of the user to use for the connection.
  username: "minecraft"
  # The users password
  password: ""

data:
  # Specifies the maximum number of processors to use for loading the data
  # Uses either all available processors, or the specified count, whichever is smaller
  max_processors: 64
  # When set true, uses the sync scheduler to load the items & recipes.
  # Data is then loaded sequentially and not parallel across multiple cores (ignores 'max_processors')
  sync: false
  # Specifies if it should print details about why the recipes are pending.
  # Recipes are mostly pending because of dependencies, and are validated once a dependency is done loading its data.
  # Usually not required as pending recipes not validated are marked as 'invalid' after a given timeout (see 'data.timeout.pending').
  print_pending: false
  # Specifies if it should print details about why the recipes failed.
  # Only disable if absolute necessary! Especially when asking for support, this should be enabled, so we can help you out!
  print_invalid: true
  timeout:
    # Timeout for the initial parsing & validation of the data.
    # If this timeout is reached then the process is interrupted, but all data that is loaded until then will be registered!
    loading:
      value: 10
      unit: SECONDS
    # Timeout to wait for pending data to be validated (plugin dependencies).
    # When this timeout is reached it marks all still pending recipes as invalid and prints them (see 'data.print_invalid').
    pending:
      value: 60
      unit: SECONDS
  # Toggle if the stacktrace should be printed when a recipe or item fails to load.
  print_stacktrace: true
  # Do not change this number! It is used for internal conversion of items between Bukkit versions to make sure they are up-to-date.
  bukkit_version: 0
  # Do not change this number! It is used to update configs of recipes and items to new formats!
  version: 0

crafting_table:
  # If the advanced crafting table is enabled or not.
  enable: true
  # If the crafting table item should be reset on each server start. This means the config is replaced with a new version.
  reset: true

cooking:
  # Toggles the vanilla recipe fallback matching, that occurs when the custom recipe check fails
  # Note: If a custom recipe is using an item used in a vanilla recipe, the vanilla recipe will be overridden.
  match_vanilla_recipes: true

recipe_book:
  # If the recipe book item should be reset on each server start. This means the config is replaced with a new version.
  reset: true
  # If closed and opened again, it'll open up the recipe and menu the player last left on.
  keep_last_open: true
  # The title of the single recipe menu
  recipe_type_titles:
    crafting_shaped: "<translate:recipe.type.crafting.crafting_shaped>"
    crafting_shapeless: "<translate:recipe.type.crafting.crafting_shapeless>"
    elite_crafting_shaped: "<translate:recipe.type.crafting.elite_crafting_shaped>"
    elite_crafting_shapeless: "<translate:recipe.type.crafting.crafting_shaped>"
    furnace: "<translate:recipe.type.cooking.furnace>"
    blast_furnace: "<translate:recipe.type.cooking.blast_furnace>"
    smoker: "<translate:recipe.type.cooking.smoker>"
    campfire: "<translate:recipe.type.cooking.campfire>"
    smithing: "<translate:recipe.type.smithing>"
    anvil: "<translate:recipe.type.anvil>"
    cauldron: "<translate:recipe.type.cauldron>"
    stonecutter: "<translate:recipe.type.stonecutter>"
    grindstone: "<translate:recipe.type.grindstone>"
    brewing_stand: "<translate:recipe.type.brewing_stand>"

workstation:
  cauldron:
    interaction: NORMAL
    gui:
      main_menu:
        title: "<translate:inventories.cauldron.cauldron.default_title>"
      result_menu:
        title: "<translate:inventories.cauldron.cauldron.default_title>"

custom_items:
  # Use this option if you have saved CustomItems and your players got them in their inventory. Each time a Player joins the server it will try to update the CustomItems.
  update: true

recipes:
  # Allow ItemsAdder items to be used as ingredient or a result item in recipes. (Might break crafting of ItemsAdder items so if you encounter issues, turn this off)
  ia_fix: true
  # Toggle the Brewing Recipes. They are off by default to prevent possible duplication issues
  brewing: false
  # Used to block any kind of custom recipe. If enabled no one will be able to craft any custom recipe anymore.
  lockdown: false
  # If the configs like items or recipes should be saved using formatting or just one continuous String.
  pretty_printing: true
  # The vanilla or custom recipes that are blocked from crafting.
  disabled_recipes: [ ]
